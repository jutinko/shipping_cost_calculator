// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/jutinko/shipping_cost_calculator/calculator"
	"github.com/jutinko/shipping_cost_calculator/utilities"
)

type FakeProductStore struct {
	GetStub        func(int) (*utilities.Product, error)
	getMutex       sync.RWMutex
	getArgsForCall []struct {
		arg1 int
	}
	getReturns struct {
		result1 *utilities.Product
		result2 error
	}
}

func (fake *FakeProductStore) Get(arg1 int) (*utilities.Product, error) {
	fake.getMutex.Lock()
	fake.getArgsForCall = append(fake.getArgsForCall, struct {
		arg1 int
	}{arg1})
	fake.getMutex.Unlock()
	if fake.GetStub != nil {
		return fake.GetStub(arg1)
	} else {
		return fake.getReturns.result1, fake.getReturns.result2
	}
}

func (fake *FakeProductStore) GetCallCount() int {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return len(fake.getArgsForCall)
}

func (fake *FakeProductStore) GetArgsForCall(i int) int {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return fake.getArgsForCall[i].arg1
}

func (fake *FakeProductStore) GetReturns(result1 *utilities.Product, result2 error) {
	fake.GetStub = nil
	fake.getReturns = struct {
		result1 *utilities.Product
		result2 error
	}{result1, result2}
}

var _ calculator.ProductStore = new(FakeProductStore)
