// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/jutinko/shipping_cost_calculator/calculator"
	"github.com/jutinko/shipping_cost_calculator/utilities"
)

type FakeShippingCalculator struct {
	CalculateStub        func(*utilities.Parcel) float64
	calculateMutex       sync.RWMutex
	calculateArgsForCall []struct {
		arg1 *utilities.Parcel
	}
	calculateReturns struct {
		result1 float64
	}
}

func (fake *FakeShippingCalculator) Calculate(arg1 *utilities.Parcel) float64 {
	fake.calculateMutex.Lock()
	fake.calculateArgsForCall = append(fake.calculateArgsForCall, struct {
		arg1 *utilities.Parcel
	}{arg1})
	fake.calculateMutex.Unlock()
	if fake.CalculateStub != nil {
		return fake.CalculateStub(arg1)
	} else {
		return fake.calculateReturns.result1
	}
}

func (fake *FakeShippingCalculator) CalculateCallCount() int {
	fake.calculateMutex.RLock()
	defer fake.calculateMutex.RUnlock()
	return len(fake.calculateArgsForCall)
}

func (fake *FakeShippingCalculator) CalculateArgsForCall(i int) *utilities.Parcel {
	fake.calculateMutex.RLock()
	defer fake.calculateMutex.RUnlock()
	return fake.calculateArgsForCall[i].arg1
}

func (fake *FakeShippingCalculator) CalculateReturns(result1 float64) {
	fake.CalculateStub = nil
	fake.calculateReturns = struct {
		result1 float64
	}{result1}
}

var _ calculator.ShippingCalculator = new(FakeShippingCalculator)
